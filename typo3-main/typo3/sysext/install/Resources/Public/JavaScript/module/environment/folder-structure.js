/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import"bootstrap";import{AbstractInteractableModule}from"@typo3/install/module/abstract-interactable-module.js";import Modal from"@typo3/backend/modal.js";import Notification from"@typo3/backend/notification.js";import AjaxRequest from"@typo3/core/ajax/ajax-request.js";import{InfoBox}from"@typo3/install/renderable/info-box.js";import Severity from"@typo3/install/renderable/severity.js";import Router from"@typo3/install/router.js";import RegularEvent from"@typo3/core/event/regular-event.js";var Identifiers;!function(e){e.outputContainer=".t3js-folderStructure-output",e.errorContainer=".t3js-folderStructure-errors",e.errorList=".t3js-folderStructure-errors-list",e.errorFixTrigger=".t3js-folderStructure-errors-fix",e.okContainer=".t3js-folderStructure-ok",e.okList=".t3js-folderStructure-ok-list",e.permissionContainer=".t3js-folderStructure-permissions"}(Identifiers||(Identifiers={}));class FolderStructure extends AbstractInteractableModule{static removeLoadingMessage(e){e.querySelector("typo3-install-progress-bar").remove()}initialize(e){super.initialize(e),this.getStatus(),new RegularEvent("click",(e=>{e.preventDefault(),this.fix()})).delegateTo(e,Identifiers.errorFixTrigger)}getStatus(){const e=this.getModalBody();this.renderProgressBar(e.querySelector(Identifiers.outputContainer)),new AjaxRequest(Router.getUrl("folderStructureGetStatus")).get({cache:"no-cache"}).then((async r=>{const t=await r.resolve();e.innerHTML=t.html,Modal.setButtons(t.buttons),!0===t.success&&Array.isArray(t.errorStatus)&&(t.errorStatus.length>0?(e.querySelector(Identifiers.errorContainer).style.display="block",e.querySelector(Identifiers.errorList).innerHTML="",t.errorStatus.forEach((r=>{e.querySelector(Identifiers.errorList).appendChild(InfoBox.create(r.severity,r.title,r.message))}))):e.querySelector(Identifiers.errorContainer).style.display="none"),!0===t.success&&Array.isArray(t.okStatus)&&(t.okStatus.length>0?(e.querySelector(Identifiers.okContainer).style.display="block",e.querySelector(Identifiers.okList).innerHTML="",t.okStatus.forEach((r=>{e.querySelector(Identifiers.okList).appendChild(InfoBox.create(r.severity,r.title,r.message))}))):e.querySelector(Identifiers.okContainer).style.display="none");let o=t.folderStructureFilePermissionStatus;const s=e.querySelector(Identifiers.permissionContainer);s.replaceChildren(InfoBox.create(o.severity,o.title,o.message)),o=t.folderStructureDirectoryPermissionStatus,s.appendChild(InfoBox.create(o.severity,o.title,o.message))}),(r=>{Router.handleAjaxError(r,e)}))}fix(){this.setModalButtonsState(!1);const e=this.getModalBody(),r=this.findInModal(Identifiers.outputContainer);this.renderProgressBar(r),new AjaxRequest(Router.getUrl("folderStructureFix")).get({cache:"no-cache"}).then((async e=>{const t=await e.resolve();FolderStructure.removeLoadingMessage(r),!0===t.success&&Array.isArray(t.fixedStatus)?(t.fixedStatus.length>0?t.fixedStatus.forEach((e=>{r.append(InfoBox.create(e.severity,e.title,e.message))})):r.append(InfoBox.create(Severity.warning,"Nothing fixed")),this.getStatus()):Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(r=>{Router.handleAjaxError(r,e)}))}}export default new FolderStructure;