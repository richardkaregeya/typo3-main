/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import"bootstrap";import{Collapse}from"bootstrap";import"@typo3/install/renderable/clearable.js";import{AbstractInteractableModule}from"@typo3/install/module/abstract-interactable-module.js";import Modal from"@typo3/backend/modal.js";import Notification from"@typo3/backend/notification.js";import AjaxRequest from"@typo3/core/ajax/ajax-request.js";import Router from"@typo3/install/router.js";import RegularEvent from"@typo3/core/event/regular-event.js";var Identifiers;!function(e){e.item=".t3js-localConfiguration-item",e.toggleAllTrigger=".t3js-localConfiguration-toggleAll",e.writeTrigger=".t3js-localConfiguration-write",e.searchTrigger=".t3js-localConfiguration-search"}(Identifiers||(Identifiers={}));class LocalConfiguration extends AbstractInteractableModule{initialize(e){super.initialize(e),this.getContent(),new RegularEvent("click",(e=>{e.preventDefault(),this.write()})).delegateTo(e,Identifiers.writeTrigger),new RegularEvent("click",(()=>{const e=this.getModalBody().querySelectorAll(".panel-collapse");e.forEach((t=>{const o=e[0].classList.contains("show")?"hide":"show";Collapse.getOrCreateInstance(t)[o]()}))})).delegateTo(e,Identifiers.toggleAllTrigger),new RegularEvent("keydown",(t=>{const o=e.querySelector(Identifiers.searchTrigger);t.ctrlKey||t.metaKey?"KeyF"===t.code&&(t.preventDefault(),o.focus()):"Escape"===t.code&&(t.preventDefault(),o.value="",o.focus())})).bindTo(e),new RegularEvent("input",((e,t)=>{const o=t.value;this.search(o)})).delegateTo(e,Identifiers.searchTrigger),new RegularEvent("change",((e,t)=>{const o=t.value;this.search(o)})).delegateTo(e,Identifiers.searchTrigger)}search(e){this.currentModal.querySelectorAll(Identifiers.item).forEach((t=>{t.textContent.toLowerCase().trim().includes(e.toLowerCase())?(t.classList.remove("hidden"),t.classList.add("searchhit")):(t.classList.remove("searchhit"),t.classList.add("hidden"))})),this.currentModal.querySelectorAll(".searchhit").forEach((e=>{const t=e.closest(".panel-collapse");Collapse.getOrCreateInstance(t).show()}))}getContent(){const e=this.getModalBody();new AjaxRequest(Router.getUrl("localConfigurationGetContent")).get({cache:"no-cache"}).then((async t=>{const o=await t.resolve();!0===o.success&&(e.innerHTML=o.html,Modal.setButtons(o.buttons),this.searchInput=e.querySelector(Identifiers.searchTrigger),this.searchInput.clearable())}),(t=>{Router.handleAjaxError(t,e)}))}write(){this.setModalButtonsState(!1);const e=this.getModalBody(),t=this.getModuleContent().dataset.localConfigurationWriteToken,o={};this.currentModal.querySelectorAll(".t3js-localConfiguration-pathValue").forEach((e=>{"checkbox"===e.type?e.checked?o[e.dataset.path]="1":o[e.dataset.path]="0":o[e.dataset.path]=e.value})),new AjaxRequest(Router.getUrl()).post({install:{action:"localConfigurationWrite",token:t,configurationValues:o}}).then((async e=>{const t=await e.resolve();!0===t.success&&Array.isArray(t.status)?t.status.forEach((e=>{Notification.showMessage(e.title,e.message,e.severity)})):Notification.error("Something went wrong","The request was not processed successfully. Please check the browser's console and TYPO3's log.")}),(t=>{Router.handleAjaxError(t,e)})).finally((()=>{this.setModalButtonsState(!0)}))}}export default new LocalConfiguration;